{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"18HeGBSc4eglX7HaZDMXkkMNFUH1Z2gzI","authorship_tag":"ABX9TyMVl0QolNmapfIKC/3rZkpY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PPmodpQnlYEk","executionInfo":{"status":"ok","timestamp":1719463928644,"user_tz":420,"elapsed":14899,"user":{"displayName":"Laahiri Maganti","userId":"13190248793059913881"}},"outputId":"1b65646b-31a7-48a0-dd0d-4ceaf6427c71"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np"],"metadata":{"id":"KZmlPZ5kmdsr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["housing_dataset = pd.read_csv('/content/drive/MyDrive/Housing.csv')"],"metadata":{"id":"mvsNEN4hmhom"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = housing_dataset"],"metadata":{"id":"PX3fSvkpm1_D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["housing_dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"LTm8eKxqm75x","executionInfo":{"status":"ok","timestamp":1719054721368,"user_tz":420,"elapsed":494,"user":{"displayName":"Laahiri Maganti","userId":"13190248793059913881"}},"outputId":"10080357-bec1-462f-dbf1-b87f18480cd9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      price  area  bedrooms  bathrooms  stories mainroad guestroom basement  \\\n","0  13300000  7420         4          2        3      yes        no       no   \n","1  12250000  8960         4          4        4      yes        no       no   \n","2  12250000  9960         3          2        2      yes        no      yes   \n","3  12215000  7500         4          2        2      yes        no      yes   \n","4  11410000  7420         4          1        2      yes       yes      yes   \n","\n","  hotwaterheating airconditioning  parking prefarea furnishingstatus  \n","0              no             yes        2      yes        furnished  \n","1              no             yes        3       no        furnished  \n","2              no              no        2      yes   semi-furnished  \n","3              no             yes        3      yes        furnished  \n","4              no             yes        2       no        furnished  "],"text/html":["\n","  <div id=\"df-1e9e29f3-c965-4a3d-ab4a-0558abf1d021\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","      <th>area</th>\n","      <th>bedrooms</th>\n","      <th>bathrooms</th>\n","      <th>stories</th>\n","      <th>mainroad</th>\n","      <th>guestroom</th>\n","      <th>basement</th>\n","      <th>hotwaterheating</th>\n","      <th>airconditioning</th>\n","      <th>parking</th>\n","      <th>prefarea</th>\n","      <th>furnishingstatus</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>13300000</td>\n","      <td>7420</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>furnished</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12250000</td>\n","      <td>8960</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>3</td>\n","      <td>no</td>\n","      <td>furnished</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12250000</td>\n","      <td>9960</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>no</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>semi-furnished</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12215000</td>\n","      <td>7500</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>3</td>\n","      <td>yes</td>\n","      <td>furnished</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>11410000</td>\n","      <td>7420</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>yes</td>\n","      <td>no</td>\n","      <td>yes</td>\n","      <td>2</td>\n","      <td>no</td>\n","      <td>furnished</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e9e29f3-c965-4a3d-ab4a-0558abf1d021')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1e9e29f3-c965-4a3d-ab4a-0558abf1d021 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1e9e29f3-c965-4a3d-ab4a-0558abf1d021');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-36c405d6-0346-4ef0-826d-c175cfba5e15\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-36c405d6-0346-4ef0-826d-c175cfba5e15')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-36c405d6-0346-4ef0-826d-c175cfba5e15 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"housing_dataset","summary":"{\n  \"name\": \"housing_dataset\",\n  \"rows\": 545,\n  \"fields\": [\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1870439,\n        \"min\": 1750000,\n        \"max\": 13300000,\n        \"num_unique_values\": 219,\n        \"samples\": [\n          3773000,\n          5285000,\n          1820000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"area\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2170,\n        \"min\": 1650,\n        \"max\": 16200,\n        \"num_unique_values\": 284,\n        \"samples\": [\n          6000,\n          2684,\n          5360\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bedrooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          4,\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bathrooms\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4,\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stories\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4,\n          1,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mainroad\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"no\",\n          \"yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"guestroom\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\",\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"basement\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\",\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hotwaterheating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"yes\",\n          \"no\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"airconditioning\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"no\",\n          \"yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"parking\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prefarea\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"no\",\n          \"yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"furnishingstatus\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"furnished\",\n          \"semi-furnished\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df['mainroad'] = df['mainroad'].replace({'yes': 1, 'no': 0})\n","df['guestroom'] = df['guestroom'].replace({'yes': 1, 'no': 0})\n","df['basement'] = df['basement'].replace({'yes': 1, 'no': 0})\n","df['hotwaterheating'] = df['hotwaterheating'].replace({'yes': 1, 'no': 0})\n","df['airconditioning'] = df['airconditioning'].replace({'yes': 1, 'no': 0})\n","df['prefarea'] = df['prefarea'].replace({'yes': 1, 'no': 0})\n","df['furnishingstatus'] = df['furnishingstatus'].replace({'furnished': 2, 'semi-furnished': 1, 'unfurnished' : 0})\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o1QGiV_7m-aI","executionInfo":{"status":"ok","timestamp":1719054738974,"user_tz":420,"elapsed":519,"user":{"displayName":"Laahiri Maganti","userId":"13190248793059913881"}},"outputId":"e5a9b2ae-49a9-438a-8d00-fefe25b801cb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["        price  area  bedrooms  bathrooms  stories  mainroad  guestroom  \\\n","0    13300000  7420         4          2        3         1          0   \n","1    12250000  8960         4          4        4         1          0   \n","2    12250000  9960         3          2        2         1          0   \n","3    12215000  7500         4          2        2         1          0   \n","4    11410000  7420         4          1        2         1          1   \n","..        ...   ...       ...        ...      ...       ...        ...   \n","540   1820000  3000         2          1        1         1          0   \n","541   1767150  2400         3          1        1         0          0   \n","542   1750000  3620         2          1        1         1          0   \n","543   1750000  2910         3          1        1         0          0   \n","544   1750000  3850         3          1        2         1          0   \n","\n","     basement  hotwaterheating  airconditioning  parking  prefarea  \\\n","0           0                0                1        2         1   \n","1           0                0                1        3         0   \n","2           1                0                0        2         1   \n","3           1                0                1        3         1   \n","4           1                0                1        2         0   \n","..        ...              ...              ...      ...       ...   \n","540         1                0                0        2         0   \n","541         0                0                0        0         0   \n","542         0                0                0        0         0   \n","543         0                0                0        0         0   \n","544         0                0                0        0         0   \n","\n","     furnishingstatus  \n","0                   2  \n","1                   2  \n","2                   1  \n","3                   2  \n","4                   2  \n","..                ...  \n","540                 0  \n","541                 1  \n","542                 0  \n","543                 2  \n","544                 0  \n","\n","[545 rows x 13 columns]\n"]}]},{"cell_type":"code","source":["housing_dataset.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a32pJBxXnCeA","executionInfo":{"status":"ok","timestamp":1719054744765,"user_tz":420,"elapsed":496,"user":{"displayName":"Laahiri Maganti","userId":"13190248793059913881"}},"outputId":"294ae116-003c-41f0-9b10-064c1239fcaa"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["price               0\n","area                0\n","bedrooms            0\n","bathrooms           0\n","stories             0\n","mainroad            0\n","guestroom           0\n","basement            0\n","hotwaterheating     0\n","airconditioning     0\n","parking             0\n","prefarea            0\n","furnishingstatus    0\n","dtype: int64"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["X = housing_dataset.drop(columns = 'price',axis = 1)\n","Y = housing_dataset['price']\n"],"metadata":{"id":"jW728T01nDrY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WSEZjoRqnH9h","executionInfo":{"status":"ok","timestamp":1719054750647,"user_tz":420,"elapsed":5,"user":{"displayName":"Laahiri Maganti","userId":"13190248793059913881"}},"outputId":"4ae946b2-a74d-41f6-e01d-445ef10d2189"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     area  bedrooms  bathrooms  stories  mainroad  guestroom  basement  \\\n","0    7420         4          2        3         1          0         0   \n","1    8960         4          4        4         1          0         0   \n","2    9960         3          2        2         1          0         1   \n","3    7500         4          2        2         1          0         1   \n","4    7420         4          1        2         1          1         1   \n","..    ...       ...        ...      ...       ...        ...       ...   \n","540  3000         2          1        1         1          0         1   \n","541  2400         3          1        1         0          0         0   \n","542  3620         2          1        1         1          0         0   \n","543  2910         3          1        1         0          0         0   \n","544  3850         3          1        2         1          0         0   \n","\n","     hotwaterheating  airconditioning  parking  prefarea  furnishingstatus  \n","0                  0                1        2         1                 2  \n","1                  0                1        3         0                 2  \n","2                  0                0        2         1                 1  \n","3                  0                1        3         1                 2  \n","4                  0                1        2         0                 2  \n","..               ...              ...      ...       ...               ...  \n","540                0                0        2         0                 0  \n","541                0                0        0         0                 1  \n","542                0                0        0         0                 0  \n","543                0                0        0         0                 2  \n","544                0                0        0         0                 0  \n","\n","[545 rows x 12 columns]\n"]}]},{"cell_type":"code","source":["print(Y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EFQPwzW8nKPI","executionInfo":{"status":"ok","timestamp":1719054754711,"user_tz":420,"elapsed":485,"user":{"displayName":"Laahiri Maganti","userId":"13190248793059913881"}},"outputId":"5095e0dd-c0a5-4fd7-d80c-42aacd76bb33"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0      13300000\n","1      12250000\n","2      12250000\n","3      12215000\n","4      11410000\n","         ...   \n","540     1820000\n","541     1767150\n","542     1750000\n","543     1750000\n","544     1750000\n","Name: price, Length: 545, dtype: int64\n"]}]},{"cell_type":"code","source":["X.shape , Y.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2rb5Xs0CnM1F","executionInfo":{"status":"ok","timestamp":1719054758311,"user_tz":420,"elapsed":510,"user":{"displayName":"Laahiri Maganti","userId":"13190248793059913881"}},"outputId":"c575a463-5d2a-4641-c6d3-28fde89497ed"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((545, 12), (545,))"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split"],"metadata":{"id":"06vpG8AonPVk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train , X_test , Y_train , Y_test = train_test_split(X , Y , test_size = 0.2)\n"],"metadata":{"id":"Ti8KLZP9nW5l"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train.shape , X_test.shape , Y_train.shape , Y_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N6fqO0Q2nZBX","executionInfo":{"status":"ok","timestamp":1719054766689,"user_tz":420,"elapsed":3,"user":{"displayName":"Laahiri Maganti","userId":"13190248793059913881"}},"outputId":"d13eef09-9608-42e9-b7c9-9247ebcd624b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((436, 12), (109, 12), (436,), (109,))"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["**LINEAR** **REGRESSION**\n"],"metadata":{"id":"K1pOojAOng1b"}},{"cell_type":"code","source":["from sklearn import linear_model\n"],"metadata":{"id":"SlEs9np3ntJz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = linear_model.LinearRegression()\n"],"metadata":{"id":"bNRGw0_Fn3gL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.fit(X_train , Y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":52},"id":"Up9gB6Csn69Y","executionInfo":{"status":"ok","timestamp":1719054774316,"user_tz":420,"elapsed":12,"user":{"displayName":"Laahiri Maganti","userId":"13190248793059913881"}},"outputId":"6095b7b8-2f1e-4ef9-8768-fa551a93a7c2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["from sklearn import metrics\n"],"metadata":{"id":"rYNsG8W_oDGX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["training_data_prediction = model.predict(X_train)"],"metadata":{"id":"p6Ij50JMoEDA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["r2_train = metrics.r2_score(Y_train , training_data_prediction)\n","print(f\"R squared value : {r2_train *100:.2f}%\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TybDY84EoHjl","executionInfo":{"status":"ok","timestamp":1719054784613,"user_tz":420,"elapsed":8,"user":{"displayName":"Laahiri Maganti","userId":"13190248793059913881"}},"outputId":"a15cb38a-d672-4b56-c415-f506afb5ba1e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["R squared value : 68.51%\n"]}]},{"cell_type":"code","source":["input_data = (8960,\t4,\t4\t,4\t,1,\t0,\t0,\t0,\t1,\t3\t,0,\t2)\n","#\n","numpy_array = np.asarray(input_data)\n","\n","input_data_reshaped = numpy_array.reshape(1,-1)\n","\n","prediction = model.predict(input_data_reshaped)\n","print(f'the price of the house would be : {prediction}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SPetmajUoLsI","executionInfo":{"status":"ok","timestamp":1719054787568,"user_tz":420,"elapsed":541,"user":{"displayName":"Laahiri Maganti","userId":"13190248793059913881"}},"outputId":"5041342a-34ba-4188-cf1c-02fa8a4d63bd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["the price of the house would be : [10666191.10650731]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names\n","  warnings.warn(\n"]}]}]}